@page "/fetchdata"
@using MultiSelectTest.Shared
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DataGrid TItem="WeatherForecast"
              Data="forecasts"
              SelectionMode="DataGridSelectionMode.Multiple"
              Responsive="true"
              RowSelectable="RowSelectableHandler">
        <DataGridMultiSelectColumn TItem="WeatherForecast" Width="30px"></DataGridMultiSelectColumn>
        <DataGridCommandColumn TItem="WeatherForecast" />

        <DataGridColumn TItem="WeatherForecast"
                        Field="@nameof(WeatherForecast.Date)"
                        Caption="Date" />

        <DataGridColumn TItem="WeatherForecast"
                        Field="@nameof(WeatherForecast.TemperatureC)"
                        Caption="Temp. (C)" />

        <DataGridColumn TItem="WeatherForecast"
                        Field="@nameof(WeatherForecast.TemperatureF)"
                        Caption="Temp. (F)" />

        <DataGridColumn TItem="WeatherForecast"
                        Field="@nameof(WeatherForecast.Summary)"
                        Caption="Summary" />
    </DataGrid>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    }

    private bool RowSelectableHandler(RowSelectableEventArgs<WeatherForecast> e)
    {
        Console.WriteLine($"SelectReason: {e.SelectReason}");
        return e.SelectReason is not DataGridSelectReason.RowClick;
    }
}
